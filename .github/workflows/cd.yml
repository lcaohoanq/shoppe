name: Continuous Deployment

# top-level permissions
permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches:
      - develop
    paths-ignore:
      - "**.md"
      - "docs/**"

jobs:
  create-env:
    runs-on: self-hosted
    # Add job-level permissions if needed
    permissions:
      contents: read

    outputs:
      env-file: ${{ steps.create-env.outputs.env-file }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Pin to specific version

      - name: Create .env file
        id: create-env-spcserver-springboot
        working-directory: spcserver/springboot
        run: |
          echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> .env
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
          echo "JWT_EXPIRATION_REFRESH_TOKEN=${{ secrets.JWT_EXPIRATION_REFRESH_TOKEN }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env

      - name: Verify .env file creation
        run: ls -al spcserver/springboot

  cache-maven:
    runs-on: self-hosted
    needs: create-env
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Cache Maven dependencies
        uses: actions/cache@v3.3.2 # Pin to specific version
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-
            maven-

  run-docker-compose:
    runs-on: self-hosted
    needs: cache-maven
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Docker stop old container
        run: docker container stop shoppe_spcserver || true

      - name: Docker Compose Up
        run: docker compose -f spcserver/springboot/docker-compose-prod.yml up -d --build --remove-orphans

  build-docker:
    runs-on: self-hosted
    needs: [create-env, cache-maven]
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Copy .env file
        run: cp spcserver/springboot/.env /DATA/actions-runner/_work/shoppe/shoppe/spcserver/springboot/.env

      - name: Verify .env file exist
        run: ls -al /DATA/actions-runner/_work/shoppe/shoppe/spcserver/springboot

      - name: Build Docker image
        run: docker build -f spcserver/springboot/Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/shoppe:latest spcserver/springboot

  push-docker-image:
    runs-on: self-hosted
    needs: build-docker
    permissions:
      contents: read
      packages: write # For Docker push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0 # Pin to specific version

      - name: Log in to DockerHub
        uses: docker/login-action@v3.0.0 # Pin to specific version
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push built image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/shoppe:latest

      - name: Log out from DockerHub
        run: docker logout
