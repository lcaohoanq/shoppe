name: Continuous Deployment

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  # Job 1: Checkout and create .env file
  create-env:
    runs-on: ubuntu-24.04
    outputs:
      env-file: ${{ steps.create-env.outputs.env-file }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        id: create-env
        run: |
          cat << EOF > ../docker/.env
          SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
          SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          EOF

      - name: Create .env file
        id: create-env-spcserver-springboot
        run: |
          cat << EOF > ../spcserver/springboot/.env
          
          SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
          SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          
          JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
          JWT_EXPIRATION_REFRESH_TOKEN=${{ secrets.JWT_EXPIRATION_REFRESH_TOKEN }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          EOF

  cache-maven:
    runs-on: ubuntu-24.04
    needs: create-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-
            maven-

  run-docker-compose:
    runs-on: ubuntu-24.04
    needs: cache-maven
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker stop old container
        run: docker container stop shoppe || true

      - name: Docker Compose Up
        run: docker compose -f docker/docker-compose-prod.yml up -d --build --remove-orphans
  
  # Job 3: Build Docker image
  build-docker:
    runs-on: ubuntu-24.04
    needs: [ create-env , cache-maven ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -f docker/Dockerfile-SpringBoot -t ${{ secrets.DOCKER_USERNAME }}/shoppe:latest .

  # Job 4: Push image to Docker Hub
  push-docker-image:
    runs-on: ubuntu-24.04
    needs: build-docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push built image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/shoppe:latest

      - name: Log out from DockerHub
        run: docker logout